{"version":3,"sources":["data/index.js","App.js","index.js"],"names":["getJsonData","lang","hindiJson","englishJson","reducerManager","state","action","payload","type","App","useReducer","city","dispatch","useState","jsonData","setJsonData","cities","setCities","useEffect","getCitiesList","resetJsonData","json_data","totalNoOfCity","parseInt","total_cities_1_value","i","push","id","name","cigg","aqi","className","value","onChange","e","target","data-testid","disabled","style","fontWeight","href","p_1_value","p_2_value","p_3_value","p_4_value","p_5_value","fontSize","map","index","Array","fill","image","src","width","height","alt","p_6_value","p_7_value","p_8_value","p_9_value","p_10_value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.521508a0.chunk.js","sourcesContent":["import englishJson from './english.json'\nimport hindiJson from './hindi.json'\n\nconst getJsonData = (lang) => {\n    if(lang === 'hindi') return hindiJson\n    if(lang === 'english') return englishJson\n}\nexport default getJsonData;","import React, { useEffect, useReducer, useState } from 'react';\nimport './App.css'\nimport getJsonData from './data'\n\nconst reducerManager = (state,action) => {\n  const {payload,type} = action\n  switch(type){\n    case \"setCity\":\n      return {...state,...payload}\n    case \"setLangVersion\":\n      return {...state,...payload}\n    default:\n      return state\n  }\n}\nconst App = () =>{\n  const [state,dispatch] = useReducer(reducerManager,{\n    city: '',\n    lang: 'english'\n  });\n  const [jsonData,setJsonData] = useState({\n\n  })\n  const [cities,setCities] = useState([])\n\n  useEffect(()=>{\n    getCitiesList()\n  },[jsonData])\n\n  useEffect(()=>{\n    resetJsonData()\n  },[state.lang])\n\n  const resetJsonData = ()=>{\n    const json_data = getJsonData(state.lang)\n    setJsonData(json_data)\n  }\n\n  const getCitiesList = () => {\n    let totalNoOfCity = parseInt(jsonData.total_cities_1_value)\n    const cities = []\n    for(let i=1; i<=totalNoOfCity;i++){\n        cities.push({\n          id: i,\n          name: jsonData[`compare-tabs_1_city_${i}_name`],\n          cigg: jsonData[`compare-tabs_1_city_${i}_cigg`],\n          aqi: jsonData[`compare-tabs_1_city_${i}_aqi`],\n        })\n    }\n    setCities(cities)\n  }\n  if(!jsonData) return null;\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"mt-2\">\n          <div className=\"w-25\">\n            <select\n              value={state.lang}\n              onChange={(e)=>{\n                const lang = e.target.value\n                dispatch({\n                  type: 'setLangVersion',\n                  payload:{\n                    lang\n                  }\n                })\n              }}\n              data-testid=\"lang_version\"\n              className=\"custom-select\"\n              id=\"lang_version\"\n            >\n              <option value=\"\" disabled style={{fontWeight: \"bold\"}}>Select Lang</option>\n              <option value=\"english\">English</option>\n              <option value=\"hindi\">Hindi</option>\n                \n            </select>\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col-md-3\">\n            <div className=\"list-group\" data-testid=\"article-section\">\n              <div className=\"list-group-item list-group-item-action flex-column align-items-start active\">\n                <div className=\"d-flex w-100 justify-content-between\">\n                  <h6 className=\"mb-1\">Author: <span data-testid=\"article-author\">{jsonData['article-info_1_byline']}</span></h6>\n                  <small data-testid=\"article-date\">{jsonData['article-info_1_date']}</small>\n                </div>\n                <div className=\"d-flex w-100 justify-content-between\">\n                  <p className=\"mb-1\" >Category: <span data-testid=\"article-category\"><a href={jsonData['article-info_1_category_url']} target=\"_blank\" className=\"text-white\">{jsonData['article-info_1_category']}</a></span></p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-9\">\n            <p className=\"\" data-testid=\"p_1_value\">{jsonData.p_1_value}</p>\n            <p className=\"\" data-testid=\"p_2_value\">{jsonData.p_2_value}</p>\n            <p className=\"\" data-testid=\"p_3_value\">{jsonData.p_3_value}</p>\n            <p className=\"\" data-testid=\"p_4_value\">{jsonData.p_4_value}</p>\n            <p className=\"\" data-testid=\"p_5_value\">{jsonData.p_5_value}</p>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label className=\"col-form-label\" data-testid='compare-tabs_1_title' style={{fontWeight: \"bold\", fontSize: \"30px\"}}>{jsonData['compare-tabs_1_title']}</label><br/>\n                  <small data-testid='compare-tabs_1_method'>{jsonData['compare-tabs_1_method']}</small>\n                  <select\n                    value={state.city}\n                    onChange={(e)=>{\n                      const city = e.target.value;\n                      dispatch({\n                        type: 'setCity',\n                        payload:{\n                          city\n                        }\n                      })\n                    }}\n                    data-testid=\"select_city\"\n                    className=\"custom-select\"\n                    id=\"cities\"\n                  >\n                    <option value=\"\">{jsonData['compare-tabs_1_title']}</option>\n                    {cities.map((city,index)=>{\n                      return (\n                        <option data-testid=\"select_city_option\" key={index} value={city.id}>{city.name}</option>\n                      )\n                    })}\n                  </select>\n                </div>\n              </div>\n            </div>\n            {state.city && \n              (\n                <>\n                  <span >City: <strong data-testid={`compare-tabs_1_city_${state.city}_name`}>{jsonData[`compare-tabs_1_city_${state.city}_name`]}</strong></span>\n                  <hr/>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"\">\n                        <h4>Cigarettes <small>(<span data-testid={`compare-tabs_1_city_${state.city}_cigg`}>{jsonData[`compare-tabs_1_city_${state.city}_cigg`]}</span>)</small></h4>\n                        <div>\n                          {\n                            Array(parseInt(jsonData[`compare-tabs_1_city_${state.city}_cigg`]))\n                            .fill('https://raw.githubusercontent.com/bbc/vj-code-tests/master/airquality/src/img/ciggrette_icon.png')\n                            .map((image,index)=>{\n                              return (\n                                <img key={index} src={image} style={{width:20, height: 45}} alt=\"cigarette-image\"/>\n                              )\n                            })\n                          }\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"\">\n                        <h4>Particulate Matter</h4>\n                        <p>Total: <strong data-testid={`compare-tabs_1_city_${state.city}_aqi`}>{jsonData[`compare-tabs_1_city_${state.city}_aqi`]}</strong></p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <hr/>\n                </>\n              )\n            }\n            <p data-testid=\"p_6_value\">{jsonData.p_6_value}</p>\n            <p data-testid=\"p_7_value\">{jsonData.p_7_value}</p>\n            <p data-testid=\"p_8_value\">{jsonData.p_8_value}</p>\n            <p data-testid=\"p_9_value\">{jsonData.p_9_value}</p>\n            <p data-testid=\"p_10_value\">{jsonData.p_10_value}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}